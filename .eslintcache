[{"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js":"1","/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js":"2","/Users/jonashansen/Desktop/food-planner/web-front/src/App.js":"3","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js":"4","/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js":"5","/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx":"6","/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx":"7","/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx":"8","/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx":"9","/Users/jonashansen/Desktop/food-planner/web-front/src/util/UserContext.tsx":"10","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js":"11","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js":"12","/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx":"13","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx":"14","/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx":"15","/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx":"16","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx":"17","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx":"18"},{"size":1086,"mtime":1609506589525,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608060058477,"results":"21","hashOfConfig":"20"},{"size":2683,"mtime":1609611695974,"results":"22","hashOfConfig":"20"},{"size":2557,"mtime":1609506589521,"results":"23","hashOfConfig":"20"},{"size":493,"mtime":1609506589522,"results":"24","hashOfConfig":"20"},{"size":82,"mtime":1608147004748,"results":"25","hashOfConfig":"20"},{"size":93,"mtime":1609506589530,"results":"26","hashOfConfig":"20"},{"size":2932,"mtime":1609512170722,"results":"27","hashOfConfig":"20"},{"size":3048,"mtime":1609605697747,"results":"28","hashOfConfig":"20"},{"size":86,"mtime":1609506589528,"results":"29","hashOfConfig":"20"},{"size":283,"mtime":1609506589524,"results":"30","hashOfConfig":"20"},{"size":281,"mtime":1609506589524,"results":"31","hashOfConfig":"20"},{"size":460,"mtime":1609506589528,"results":"32","hashOfConfig":"20"},{"size":316,"mtime":1609513485716,"results":"33","hashOfConfig":"20"},{"size":832,"mtime":1609506589523,"results":"34","hashOfConfig":"20"},{"size":3464,"mtime":1609518188861,"results":"35","hashOfConfig":"20"},{"size":1346,"mtime":1609607046380,"results":"36","hashOfConfig":"20"},{"size":1439,"mtime":1609613383362,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zsbkvr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js",[],["80","81"],"/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/App.js",["82","83","84","85"],"import React, { useState, useEffect, useContext } from 'react'\n\n\n// for authentication using auth0\nimport { useAuth0 } from \"./auth/react-auth0-wrapper\";\n\n// for routing\nimport SecuredRoute from './components/SecuredRoute';\nimport { Route, Switch } from \"react-router-dom\";\n\n// for apollo client\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"apollo-boost\";\nimport { setContext } from '@apollo/client/link/context';\n\nimport UserSettings from './views/UserSettings';\nimport PlanView from './views/PlanView';\nimport DishView from './views/DishView';\nimport NotFound from './views/NotFound';\nimport Header from './Header';\nimport { UserContext } from './util/UserContext'; \n\nconst httpLink = new HttpLink({\n  uri: 'https://trusty-donkey-75.hasura.app/v1/graphql',\n});\n\nconst App = () => {\n  const { isAuthenticated } = useAuth0();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [client, setClient] = useState();\n  const { getTokenSilently, loading, user } = useAuth0();\n  //const [value, setValue] = useContext(UserContext)\n\n  console.log({user});\n\n  useEffect(() => {\n    const getAccessToken = async () => {\n      if (isAuthenticated) {\n        try {\n          const token = await getTokenSilently();\n          setAccessToken(token);\n        } catch (e) {\n          console.log(e);\n        }        \n      }\n    };\n    getAccessToken();\n    \n  });\n\n  useEffect(() => {\n    const authLink = setContext((_, { headers }) => {\n      const token = accessToken;\n      if (token) {\n        return {\n          headers: {\n            ...headers,\n            authorization: `Bearer ${token}`,\n          },\n        };\n      } else {\n        return {\n          headers: {\n            ...headers,\n          },\n        };\n      }\n    });\n\n    const client = new ApolloClient({\n      link: authLink.concat(httpLink),\n      cache: new InMemoryCache(),\n    });\n    setClient(client);\n  }, [accessToken]);\n  \n\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <UserContext.Provider value={user}>\n        <Header />\n        <div className=\"px-6 mx-auto flex flex-wrap items-center justify-between\">\n          <Switch>\n            <Route exact path='/' component={PlanView} />\n            <Route exact path='/dishes' component={DishView} />\n              {/* <Route exact path='/user-settings' component={UserSettings} />\n              <Route exact path='/dishes' component={Dishes} />\n              <Route path='/' component={NotFound} /> */}\n          </Switch>\n        </div>  \n      </UserContext.Provider>            \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx",[],["86","87"],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx",["88","89"],"import React, { useState, useEffect } from 'react'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { PlanDay } from '../components/plan/PlanDay';\nimport { timeUtil } from '../util/timeUtil';\nimport { Button } from '../components/global/Button';\nimport { ArrowLeft } from '../images/arrow-left';\nimport { ArrowRight } from '../images/arrow-right';\nimport { Plan } from '../interfaces/planInterface';\n\nconst PLANS = gql`\nquery MyQuery {\n  plan {\n    week_number\n    dish_monday {\n      name\n      recipe\n      dish_ingredients {\n        ingredient {\n          name\n        }\n      }\n    }\n  }\n  }\n`;\n\nexport default function PlanView() {\n\n  const [dateView, setDateView] = useState(new Date());\n\n  const [weekNumber, setWeekNumber] = useState(timeUtil(dateView));\n\n  const [weekPlan, setWeekPlan] = useState<Plan>();\n\n  const { loading, error, data } = useQuery(PLANS);\n\n  const updateWeekPlan = (newWeek: number) => {\n    setWeekPlan({});\n    if (data) {\n      data.plan.filter((obj: Plan) => {\n        if (obj.week_number === newWeek) {\n          setWeekPlan(obj);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (data) {\n      data.plan.filter((obj: Plan) => {\n        if (obj.week_number === weekNumber) {\n          setWeekPlan(obj);\n        }\n      });\n    }\n  });\n\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  const goToPreviousWeek = () => {\n    let currentDateMinusOneWeek = dateView;\n    currentDateMinusOneWeek.setDate(currentDateMinusOneWeek.getDate() - 1 * 7);\n    setDateView(currentDateMinusOneWeek);\n    const newWeek = timeUtil(currentDateMinusOneWeek);\n    setWeekNumber(newWeek);\n    updateWeekPlan(newWeek);\n  }\n\n  const goToNextWeek = () => {\n    let currentDatePlusOneWeek = dateView;\n    currentDatePlusOneWeek.setDate(currentDatePlusOneWeek.getDate() + 1 * 7);\n    setDateView(currentDatePlusOneWeek);\n    const newWeek = timeUtil(currentDatePlusOneWeek);\n    setWeekNumber(newWeek);\n    updateWeekPlan(newWeek);\n  }\n\n  return (\n    <div className=\"flex-col w-full\">\n      <div className=\"flex flex-row\">\n        <div className=\"mx-2\">Week number: {weekNumber} </div>\n        <div className=\"my-auto\"><Button image={<ArrowLeft />} handleClick={goToPreviousWeek} /></div>\n        <div className=\"my-auto\"><Button image={<ArrowRight />} handleClick={goToNextWeek} /></div>\n      </div>\n\n      <div className=\"flex flex-col lg:flex-row\">\n        <PlanDay day=\"Monday\" dish={weekPlan?.dish_monday} />\n        <PlanDay day=\"Tuesday\" dish={weekPlan?.dish_tuesday} />\n        <PlanDay day=\"Wednesday\" dish={weekPlan?.dish_wednesday} />\n        <PlanDay day=\"Thursday\" dish={weekPlan?.dish_thursday} />\n        <PlanDay day=\"Friday\" dish={weekPlan?.dish_friday} />\n        <PlanDay day=\"Saturday\" dish={weekPlan?.dish_saturday} />\n        <PlanDay day=\"Sunday\" dish={weekPlan?.dish_sunday} />\n      </div>\n    </div>\n  )\n}\n\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx",["90","91","92","93","94","95","96"],"import React, { useEffect, useContext, useState } from 'react'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Dish } from '../interfaces/planInterface';\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\nimport { Button } from '../components/global/Button';\n\n//import { UserContext } from '../util/UserContext';\nimport ModalWrapper from '../components/global/modal/ModalWrapper';\nimport CreateDishModal from '../components/global/modal/modals/CreateDishModal';\n\nconst DISHES = gql`\n    query MyQuery {\n        dish {\n        name\n        recipe\n        is_public\n        created_by\n        dish_ingredients {\n            ingredient {\n            name\n            }\n        }\n        }\n    }\n`;\n\ninterface Props {\n\n}\n\nexport default function DishView() {\n\n    const { loading, error, data } = useQuery(DISHES);\n\n    const { user } = useAuth0();\n\n    const [showCreateDishModal, setShowCreateDishModal] = useState(false);\n\n    //const context = useContext(UserContext);\n\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n\n    const worked  = () => {\n        console.log(\"worked\");\n        \n    }\n\n    return (\n        <div className=\"flex flex-col w-full\">\n            {\n                showCreateDishModal && (\n                    <ModalWrapper handleClose={() => setShowCreateDishModal(false)} title=\"Create new dish\" modalType=\"createDish\"/>\n                )\n            }\n            <Button text=\"Create new dish\" handleClick={() => setShowCreateDishModal(true)} />\n            <div className=\"flex flex-row w-full\">\n                <div className=\"flex flex-col flex-grow\">\n                    <div>My dishes</div>\n                    <div>\n                        {\n                            data.dish.map((dishItem: Dish, index: number) => {\n                                if (dishItem.created_by === user.sub) {\n                                    return (\n                                        <div key={index}>\n                                            {dishItem.name}\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"flex flex-col flex-grow\">\n                    <div>Inspiration</div>\n                    <div>\n                        {\n                            data.dish.map((dishItem: Dish, index: number) => {\n                                if (dishItem.created_by !== user.sub) {\n                                    return (\n                                        <div key={index}>\n                                            {dishItem.name}\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n            </div>            \n        </div>\n    )\n}\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/util/UserContext.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx",["97"],"import React, { ReactElement, useState, useEffect } from 'react'\nimport { createPortal } from 'react-dom';\nimport { Button } from '../Button'\nimport CreateDishModal from './modals/CreateDishModal';\n\nconst modalRoot = document.getElementById( 'modal' );\n\ninterface Props {\n    handleClose:any,\n    children?:ReactElement,\n    title?:String,\n    modalType:String\n}\n\nexport const MODAL_TYPE = {\n    CREATE_DISH: 'createDish'\n}\n\nfunction ModalWrapper(props:Props): ReactElement { \n\n    const element = document.createElement('div');\n\n    useEffect(() => {\n        modalRoot?.appendChild(element);\n        return () => {\n            modalRoot?.removeChild(element);\n        }\n    });    \n\n    const onSuccess = () => {\n\n    }\n\n    const getModal = () => {\n        switch (props.modalType) {\n            case MODAL_TYPE.CREATE_DISH:\n                return <CreateDishModal handleSuccess={() => onSuccess}/>\n                \n        }\n    }\n\n    const getModalHTML = () => {\n        return (\n        <div className=\"h-screen w-300 z-50 absolute bg-green-200 right-0\">\n            <div>\n                <Button text=\"Close modal\" handleClick={props.handleClose}/>\n            </div>\n            {props.title}\n            {getModal()}\n        </div>\n        )\n    }\n\n    return createPortal(getModalHTML(), element);    \n\n}\n\nexport default ModalWrapper;\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":38,"nodeType":"104","messageId":"105","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"106","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"107","line":16,"column":8,"nodeType":"104","messageId":"105","endLine":16,"endColumn":20},{"ruleId":"102","severity":1,"message":"108","line":19,"column":8,"nodeType":"104","messageId":"105","endLine":19,"endColumn":16},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"109","severity":1,"message":"110","line":41,"column":36,"nodeType":"111","messageId":"112","endLine":41,"endColumn":38},{"ruleId":"109","severity":1,"message":"110","line":51,"column":36,"nodeType":"111","messageId":"112","endLine":51,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"103","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":38},{"ruleId":"113","severity":1,"message":"115","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":23},{"ruleId":"113","severity":1,"message":"116","line":28,"column":11,"nodeType":"104","messageId":"105","endLine":28,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":45,"column":11,"nodeType":"104","messageId":"105","endLine":45,"endColumn":17},{"ruleId":"109","severity":1,"message":"118","line":63,"column":75,"nodeType":"111","messageId":"119","endLine":63,"endColumn":77},{"ruleId":"109","severity":1,"message":"118","line":79,"column":75,"nodeType":"111","messageId":"119","endLine":79,"endColumn":77},{"ruleId":"113","severity":1,"message":"120","line":1,"column":31,"nodeType":"104","messageId":"105","endLine":1,"endColumn":39},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'SecuredRoute' is defined but never used.","'UserSettings' is defined but never used.","'NotFound' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","'CreateDishModal' is defined but never used.","'Props' is defined but never used.","'worked' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]