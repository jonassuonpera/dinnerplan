[{"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js":"1","/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js":"2","/Users/jonashansen/Desktop/food-planner/web-front/src/App.js":"3","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js":"4","/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js":"5","/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx":"6","/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx":"7","/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx":"8","/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx":"9","/Users/jonashansen/Desktop/food-planner/web-front/src/util/UserContext.tsx":"10","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js":"11","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js":"12","/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx":"13","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx":"14","/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx":"15","/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx":"16","/Users/jonashansen/Desktop/food-planner/web-front/src/hooks/modalHook.tsx":"17","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx":"18","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalConductor.tsx":"19","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx":"20"},{"size":1086,"mtime":1609506589525,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608060058477,"results":"23","hashOfConfig":"22"},{"size":2735,"mtime":1609543778950,"results":"24","hashOfConfig":"22"},{"size":2557,"mtime":1609506589521,"results":"25","hashOfConfig":"22"},{"size":493,"mtime":1609506589522,"results":"26","hashOfConfig":"22"},{"size":82,"mtime":1608147004748,"results":"27","hashOfConfig":"22"},{"size":93,"mtime":1609506589530,"results":"28","hashOfConfig":"22"},{"size":2932,"mtime":1609512170722,"results":"29","hashOfConfig":"22"},{"size":3048,"mtime":1609595582440,"results":"30","hashOfConfig":"22"},{"size":86,"mtime":1609506589528,"results":"31","hashOfConfig":"22"},{"size":283,"mtime":1609506589524,"results":"32","hashOfConfig":"22"},{"size":281,"mtime":1609506589524,"results":"33","hashOfConfig":"22"},{"size":460,"mtime":1609506589528,"results":"34","hashOfConfig":"22"},{"size":316,"mtime":1609513485716,"results":"35","hashOfConfig":"22"},{"size":832,"mtime":1609506589523,"results":"36","hashOfConfig":"22"},{"size":3464,"mtime":1609518188861,"results":"37","hashOfConfig":"22"},{"size":248,"mtime":1609543861033,"results":"38","hashOfConfig":"22"},{"size":958,"mtime":1609596747864,"results":"39","hashOfConfig":"22"},{"size":821,"mtime":1609539764012,"results":"40","hashOfConfig":"22"},{"size":285,"mtime":1609539889588,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zsbkvr",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js",[],["89","90"],"/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/App.js",["91","92","93","94","95"],"import React, { useState, useEffect, useContext } from 'react'\n\n\n// for authentication using auth0\nimport { useAuth0 } from \"./auth/react-auth0-wrapper\";\n\n// for routing\nimport SecuredRoute from './components/SecuredRoute';\nimport { Route, Switch } from \"react-router-dom\";\n\n// for apollo client\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"apollo-boost\";\nimport { setContext } from '@apollo/client/link/context';\n\nimport UserSettings from './views/UserSettings';\nimport PlanView from './views/PlanView';\nimport DishView from './views/DishView';\nimport NotFound from './views/NotFound';\nimport Header from './Header';\nimport { UserContext } from './util/UserContext'; \nimport { ModalConductor } from './components/global/modal/ModalConductor';\n\n\nconst httpLink = new HttpLink({\n  uri: 'https://trusty-donkey-75.hasura.app/v1/graphql',\n});\n\nconst App = () => {\n  const { isAuthenticated } = useAuth0();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [client, setClient] = useState();\n  const { getTokenSilently, loading, user } = useAuth0();\n  //const [value, setValue] = useContext(UserContext)\n\n  useEffect(() => {\n    const getAccessToken = async () => {\n      if (isAuthenticated) {\n        try {\n          const token = await getTokenSilently();\n          setAccessToken(token);\n        } catch (e) {\n          console.log(e);\n        }        \n      }\n    };\n    getAccessToken();\n    \n  });\n\n  useEffect(() => {\n    const authLink = setContext((_, { headers }) => {\n      const token = accessToken;\n      if (token) {\n        return {\n          headers: {\n            ...headers,\n            authorization: `Bearer ${token}`,\n          },\n        };\n      } else {\n        return {\n          headers: {\n            ...headers,\n          },\n        };\n      }\n    });\n\n    const client = new ApolloClient({\n      link: authLink.concat(httpLink),\n      cache: new InMemoryCache(),\n    });\n    setClient(client);\n  }, [accessToken]);\n  \n\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <UserContext.Provider value={user}>\n        <Header />\n        <div className=\"px-6 mx-auto flex flex-wrap items-center justify-between\">\n          <Switch>\n            <Route exact path='/' component={PlanView} />\n            <Route exact path='/dishes' component={DishView} />\n              {/* <Route exact path='/user-settings' component={UserSettings} />\n              <Route exact path='/dishes' component={Dishes} />\n              <Route path='/' component={NotFound} /> */}\n          </Switch>\n        </div>  \n      </UserContext.Provider>            \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx",[],["96","97"],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx",["98","99"],"import React, { useState, useEffect } from 'react'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { PlanDay } from '../components/plan/PlanDay';\nimport { timeUtil } from '../util/timeUtil';\nimport { Button } from '../components/global/Button';\nimport { ArrowLeft } from '../images/arrow-left';\nimport { ArrowRight } from '../images/arrow-right';\nimport { Plan } from '../interfaces/planInterface';\n\nconst PLANS = gql`\nquery MyQuery {\n  plan {\n    week_number\n    dish_monday {\n      name\n      recipe\n      dish_ingredients {\n        ingredient {\n          name\n        }\n      }\n    }\n  }\n  }\n`;\n\nexport default function PlanView() {\n\n  const [dateView, setDateView] = useState(new Date());\n\n  const [weekNumber, setWeekNumber] = useState(timeUtil(dateView));\n\n  const [weekPlan, setWeekPlan] = useState<Plan>();\n\n  const { loading, error, data } = useQuery(PLANS);\n\n  const updateWeekPlan = (newWeek: number) => {\n    setWeekPlan({});\n    if (data) {\n      data.plan.filter((obj: Plan) => {\n        if (obj.week_number === newWeek) {\n          setWeekPlan(obj);\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (data) {\n      data.plan.filter((obj: Plan) => {\n        if (obj.week_number === weekNumber) {\n          setWeekPlan(obj);\n        }\n      });\n    }\n  });\n\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  const goToPreviousWeek = () => {\n    let currentDateMinusOneWeek = dateView;\n    currentDateMinusOneWeek.setDate(currentDateMinusOneWeek.getDate() - 1 * 7);\n    setDateView(currentDateMinusOneWeek);\n    const newWeek = timeUtil(currentDateMinusOneWeek);\n    setWeekNumber(newWeek);\n    updateWeekPlan(newWeek);\n  }\n\n  const goToNextWeek = () => {\n    let currentDatePlusOneWeek = dateView;\n    currentDatePlusOneWeek.setDate(currentDatePlusOneWeek.getDate() + 1 * 7);\n    setDateView(currentDatePlusOneWeek);\n    const newWeek = timeUtil(currentDatePlusOneWeek);\n    setWeekNumber(newWeek);\n    updateWeekPlan(newWeek);\n  }\n\n  return (\n    <div className=\"flex-col w-full\">\n      <div className=\"flex flex-row\">\n        <div className=\"mx-2\">Week number: {weekNumber} </div>\n        <div className=\"my-auto\"><Button image={<ArrowLeft />} handleClick={goToPreviousWeek} /></div>\n        <div className=\"my-auto\"><Button image={<ArrowRight />} handleClick={goToNextWeek} /></div>\n      </div>\n\n      <div className=\"flex flex-col lg:flex-row\">\n        <PlanDay day=\"Monday\" dish={weekPlan?.dish_monday} />\n        <PlanDay day=\"Tuesday\" dish={weekPlan?.dish_tuesday} />\n        <PlanDay day=\"Wednesday\" dish={weekPlan?.dish_wednesday} />\n        <PlanDay day=\"Thursday\" dish={weekPlan?.dish_thursday} />\n        <PlanDay day=\"Friday\" dish={weekPlan?.dish_friday} />\n        <PlanDay day=\"Saturday\" dish={weekPlan?.dish_saturday} />\n        <PlanDay day=\"Sunday\" dish={weekPlan?.dish_sunday} />\n      </div>\n    </div>\n  )\n}\n\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx",["100","101","102","103","104","105","106","107"],"/Users/jonashansen/Desktop/food-planner/web-front/src/util/UserContext.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/hooks/modalHook.tsx",["108"],"import React, { useState } from 'react'\n\nexport const useModal = (initialMode = false) => {\n    const [modalOpen, setModalOpen] = useState(initialMode)\n    const toggle = () => setModalOpen(!modalOpen)\n    return [modalOpen, setModalOpen, toggle]\n}","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx",["109","110"],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalConductor.tsx",["111"],"\nimport { ReactElement, useState } from 'react';\nimport { Button } from '../Button';\nimport CreateDishModal from './modals/CreateDishModal';\n\nexport const MODAL_TYPE = {\n    CREATE_DISH_MODAL:'createDishModal'\n}\n\ninterface Props {\n    modalType:String,\n    open:boolean\n}\n\nexport const ModalConductor = (props:Props):ReactElement => {\n\n    const [modalOpen, setModalOpen] = useState(true);\n\n    const closeModal = () => {\n        setModalOpen(false);\n    }\n\n    const getModalHTML = ():ReactElement | undefined => {\n        switch (props.modalType) {\n            case MODAL_TYPE.CREATE_DISH_MODAL:\n                return <CreateDishModal />\n        }\n    }\n\n    return (\n        <div>\n            <div><Button text=\"close\" handleClick={closeModal} /></div>\n            <div>{getModalHTML()}</div>\n        </div>\n    )\n}\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx",["112"],"import React, { ReactElement } from 'react'\n\ninterface Props {\n    \n}\n\nfunction CreateDishModal({}: Props): ReactElement {\n\n    return (\n        <div className=\"border-gray-500 border-2\">\n            This is where dish is created\n        </div>\n    )\n}\n\nexport default CreateDishModal\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":38,"nodeType":"119","messageId":"120","endLine":1,"endColumn":48},{"ruleId":"117","severity":1,"message":"121","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":16,"column":8,"nodeType":"119","messageId":"120","endLine":16,"endColumn":20},{"ruleId":"117","severity":1,"message":"123","line":19,"column":8,"nodeType":"119","messageId":"120","endLine":19,"endColumn":16},{"ruleId":"117","severity":1,"message":"124","line":22,"column":10,"nodeType":"119","messageId":"120","endLine":22,"endColumn":24},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"125","severity":1,"message":"126","line":41,"column":36,"nodeType":"127","messageId":"128","endLine":41,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":51,"column":36,"nodeType":"127","messageId":"128","endLine":51,"endColumn":38},{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"118","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":38},{"ruleId":"129","severity":1,"message":"131","line":29,"column":11,"nodeType":"119","messageId":"120","endLine":29,"endColumn":16},{"ruleId":"129","severity":1,"message":"132","line":39,"column":12,"nodeType":"119","messageId":"120","endLine":39,"endColumn":25},{"ruleId":"129","severity":1,"message":"133","line":39,"column":27,"nodeType":"119","messageId":"120","endLine":39,"endColumn":43},{"ruleId":"129","severity":1,"message":"134","line":39,"column":45,"nodeType":"119","messageId":"120","endLine":39,"endColumn":56},{"ruleId":"125","severity":1,"message":"135","line":66,"column":71,"nodeType":"127","messageId":"136","endLine":66,"endColumn":73},{"ruleId":"125","severity":1,"message":"135","line":82,"column":71,"nodeType":"127","messageId":"136","endLine":82,"endColumn":73},{"ruleId":"129","severity":1,"message":"137","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"138","line":1,"column":31,"nodeType":"119","messageId":"120","endLine":1,"endColumn":39},{"ruleId":"129","severity":1,"message":"139","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"140","line":17,"column":12,"nodeType":"119","messageId":"120","endLine":17,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":7,"column":26,"nodeType":"143","messageId":"144","endLine":7,"endColumn":35},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'SecuredRoute' is defined but never used.","'UserSettings' is defined but never used.","'NotFound' is defined but never used.","'ModalConductor' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","'Props' is defined but never used.","'itemModalOpen' is assigned a value but never used.","'setItemModalOpen' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'React' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'modalOpen' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]