[{"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js":"1","/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js":"2","/Users/jonashansen/Desktop/food-planner/web-front/src/App.js":"3","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js":"4","/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js":"5","/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx":"6","/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx":"7","/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx":"8","/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx":"9","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js":"10","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js":"11","/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx":"12","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx":"13","/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx":"14","/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx":"15","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx":"16","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx":"17","/Users/jonashansen/Desktop/food-planner/web-front/src/UserContext.tsx":"18","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Input.tsx":"19","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/AddDishModal.tsx":"20","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/SearchSuggester.tsx":"21"},{"size":1086,"mtime":1609506589525,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1608060058477,"results":"24","hashOfConfig":"23"},{"size":2595,"mtime":1609617830997,"results":"25","hashOfConfig":"23"},{"size":2557,"mtime":1609506589521,"results":"26","hashOfConfig":"23"},{"size":493,"mtime":1609506589522,"results":"27","hashOfConfig":"23"},{"size":82,"mtime":1608147004748,"results":"28","hashOfConfig":"23"},{"size":93,"mtime":1609506589530,"results":"29","hashOfConfig":"23"},{"size":4138,"mtime":1609786411071,"results":"30","hashOfConfig":"23"},{"size":2852,"mtime":1609624248851,"results":"31","hashOfConfig":"23"},{"size":275,"mtime":1609786333833,"results":"32","hashOfConfig":"23"},{"size":273,"mtime":1609786339509,"results":"33","hashOfConfig":"23"},{"size":460,"mtime":1609506589528,"results":"34","hashOfConfig":"23"},{"size":397,"mtime":1609785885245,"results":"35","hashOfConfig":"23"},{"size":2797,"mtime":1609787376930,"results":"36","hashOfConfig":"23"},{"size":3508,"mtime":1609787985599,"results":"37","hashOfConfig":"23"},{"size":1603,"mtime":1609698849404,"results":"38","hashOfConfig":"23"},{"size":3883,"mtime":1609767034706,"results":"39","hashOfConfig":"23"},{"size":167,"mtime":1609617314474,"results":"40","hashOfConfig":"23"},{"size":593,"mtime":1609769521343,"results":"41","hashOfConfig":"23"},{"size":1619,"mtime":1609700996893,"results":"42","hashOfConfig":"23"},{"size":1428,"mtime":1609757867536,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"zsbkvr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonashansen/Desktop/food-planner/web-front/src/index.js",[],["92","93"],"/Users/jonashansen/Desktop/food-planner/web-front/src/reportWebVitals.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/App.js",["94","95","96","97"],"import React, { useState, useEffect, useContext } from 'react'\n\n\n// for authentication using auth0\nimport { useAuth0 } from \"./auth/react-auth0-wrapper\";\n\n// for routing\nimport SecuredRoute from './components/SecuredRoute';\nimport { Route, Switch } from \"react-router-dom\";\n\n// for apollo client\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"apollo-boost\";\nimport { setContext } from '@apollo/client/link/context';\n\nimport UserSettings from './views/UserSettings';\nimport PlanView from './views/PlanView';\nimport DishView from './views/DishView';\nimport NotFound from './views/NotFound';\nimport Header from './Header';\nimport UserContext from './UserContext';\n\nconst httpLink = new HttpLink({\n  uri: 'https://trusty-donkey-75.hasura.app/v1/graphql',\n});\n\nconst App = () => {\n  const { isAuthenticated } = useAuth0();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [client, setClient] = useState();\n  const { getTokenSilently, loading, user } = useAuth0();\n\n  useEffect(() => {\n    const getAccessToken = async () => {\n      if (isAuthenticated) {\n        try {\n          const token = await getTokenSilently();\n          setAccessToken(token);\n        } catch (e) {\n          console.log(e);\n        }        \n      }\n    };\n    getAccessToken();\n    \n  });\n\n  useEffect(() => {\n    const authLink = setContext((_, { headers }) => {\n      const token = accessToken;\n      if (token) {\n        return {\n          headers: {\n            ...headers,\n            authorization: `Bearer ${token}`,\n          },\n        };\n      } else {\n        return {\n          headers: {\n            ...headers,\n          },\n        };\n      }\n    });\n\n    const client = new ApolloClient({\n      link: authLink.concat(httpLink),\n      cache: new InMemoryCache(),\n    });\n    setClient(client);\n  }, [accessToken]);\n  \n\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <UserContext.Provider value={user}>\n        <Header />\n        <div className=\"px-6 mx-auto flex flex-wrap items-center justify-between\">\n          <Switch>\n            <Route exact path='/' component={PlanView} />\n            <Route exact path='/dishes' component={DishView} />\n              {/* <Route exact path='/user-settings' component={UserSettings} />\n              <Route exact path='/dishes' component={Dishes} />\n              <Route path='/' component={NotFound} /> */}\n          </Switch>\n        </div>  \n      </UserContext.Provider>            \n    </ApolloProvider>\n  );\n}\n\nexport default App;\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/auth/react-auth0-wrapper.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/SecuredRoute.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/NotFound.tsx",[],["98","99"],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/UserSettings.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/PlanView.tsx",["100","101"],"/Users/jonashansen/Desktop/food-planner/web-front/src/views/DishView.tsx",["102","103"],"import React, { useState } from 'react'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Dish } from '../interfaces/planInterface';\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\nimport { Button } from '../components/global/Button';\nimport ModalWrapper from '../components/global/modal/ModalWrapper';\n\nconst DISHES = gql`\n    query MyQuery {\n        dish {\n            name\n            recipe\n            is_public\n            created_by\n            dish_ingredients {\n                ingredient {\n                name\n                }\n            }\n        }\n    }\n`;\n\nexport default function DishView() {\n\n    const { loading, error, data } = useQuery(DISHES);\n\n    const { user } = useAuth0();\n\n    const [showCreateDishModal, setShowCreateDishModal] = useState(false);\n\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n\n    const dishCreated = () => {\n\n    } \n\n    return (\n        <div className=\"flex flex-col w-full\">\n            {\n                showCreateDishModal && (\n                    <ModalWrapper onSuccess={() => dishCreated} handleClose={() => setShowCreateDishModal(false)} title=\"Create new dish\" modalType=\"createDish\"/>\n                )\n            }\n            <Button text=\"Create new dish\" handleClick={() => setShowCreateDishModal(true)} />\n            <div className=\"flex flex-row w-full\">\n                <div className=\"flex flex-col flex-grow\">\n                    <div>My dishes</div>\n                    <div>\n                        {\n                            data.dish.map((dishItem: Dish, index: number) => {\n                                if (dishItem.created_by === user.sub) {\n                                    return (\n                                        <div key={index}>\n                                            {dishItem.name}\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n                <div className=\"flex flex-col flex-grow\">\n                    <div>Inspiration</div>\n                    <div>\n                        {\n                            data.dish.map((dishItem: Dish, index: number) => {\n                                if (dishItem.created_by !== user.sub) {\n                                    return (\n                                        <div key={index}>\n                                            {dishItem.name}\n                                        </div>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n            </div>            \n        </div>\n    )\n}\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-left.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/images/arrow-right.js",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/util/timeUtil.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Button.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/plan/PlanDay.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/Header.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/ModalWrapper.tsx",["104","105"],"import React, { ReactElement, useState, useEffect } from 'react'\nimport { createPortal } from 'react-dom';\nimport { Button } from '../Button'\nimport AddDishModal from './modals/AddDishModal';\nimport CreateDishModal from './modals/CreateDishModal';\n\nconst modalRoot = document.getElementById( 'modal' );\n\ninterface Props {\n    handleClose:any,\n    children?:ReactElement,\n    title?:string,\n    modalType:string,\n    onSuccess:any,\n    data?:any\n}\n\nexport const MODAL_TYPE = {\n    CREATE_DISH: 'createDish',\n    ADD_DISH: 'addDish'\n}\n\nfunction ModalWrapper(props:Props): ReactElement { \n\n    const element = document.createElement('div');\n\n    useEffect(() => {\n        modalRoot?.appendChild(element);\n        return () => {\n            modalRoot?.removeChild(element);\n        }\n    });    \n\n    const onSuccess = () => {\n\n    }\n\n    const getModal = () => {\n        switch (props.modalType) {\n            case MODAL_TYPE.CREATE_DISH:\n                return <CreateDishModal handleSuccess={() => props.onSuccess}/>\n\n            case MODAL_TYPE.ADD_DISH:\n                return <AddDishModal handleSuccess={() => props.onSuccess} data={props.data}/>\n                        \n        }\n    }\n\n    const getModalHTML = () => {\n        return (\n        <div className=\"h-screen w-300 z-50 absolute bg-green-200 right-0\">\n            <div>\n                <Button text=\"Close modal\" handleClick={props.handleClose}/>\n            </div>\n            {props.title}\n            {getModal()}\n        </div>\n        )\n    }\n\n    return createPortal(getModalHTML(), element);    \n\n}\n\nexport default ModalWrapper;\n\n","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/CreateDishModal.tsx",["106","107","108","109","110"],"/Users/jonashansen/Desktop/food-planner/web-front/src/UserContext.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/Input.tsx",[],"/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/modal/modals/AddDishModal.tsx",["111","112"],"import React, { ReactElement } from 'react';\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Dish } from '../../../../interfaces/planInterface';\nimport { Button } from '../../Button';\nimport DishItem from '../../../dish/DishItem';\n\n\n\ninterface Props {\n    handleSuccess:any,\n    data: {\n        day:string,\n        planId:number\n    }\n}\n\nconst DISHES = gql`\n    query {\n        dish {\n            id\n            name\n        }\n    }\n`;\n\n\nfunction AddDishModal(props: Props): ReactElement {\n\n    const { loading, error, data } = useQuery(DISHES);\n\n    const ADD_DISH_TO_PLAN = gql`\n        mutation ($planId:Int!, $dishId:Int!, $day:String!) {\n        update_plan_by_pk(pk_columns: {id: $planId}, _set: {${props.data.day.toLowerCase()}: $dishId}) {\n        id\n        }\n    }\n`;\n\n    const [addDishToPlan] = useMutation(ADD_DISH_TO_PLAN);\n\n    const handleSelectDish = (dishId:number) => {\n        console.log(\"dish name: \",dishId);\n        addDishToPlan({variables: {planId:props.data.planId, dishId:dishId, day:props.data.day}});\n    }\n\n    console.log({props});\n    \n\n    return (\n        <div className=\"flex flex-col\">\n            {\n                !loading && data.dish.map((dishItem:Dish, index:number) => {\n                    return (\n                        <div key={index}>\n                            <Button handleClick={() => handleSelectDish(dishItem.id)} text={dishItem.name} />                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default AddDishModal\n","/Users/jonashansen/Desktop/food-planner/web-front/src/components/global/SearchSuggester.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":38,"nodeType":"119","messageId":"120","endLine":1,"endColumn":48},{"ruleId":"117","severity":1,"message":"121","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":16,"column":8,"nodeType":"119","messageId":"120","endLine":16,"endColumn":20},{"ruleId":"117","severity":1,"message":"123","line":19,"column":8,"nodeType":"119","messageId":"120","endLine":19,"endColumn":16},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"124","severity":1,"message":"125","line":105,"column":36,"nodeType":"126","messageId":"127","endLine":105,"endColumn":38},{"ruleId":"124","severity":1,"message":"125","line":115,"column":36,"nodeType":"126","messageId":"127","endLine":115,"endColumn":38},{"ruleId":"124","severity":1,"message":"128","line":53,"column":75,"nodeType":"126","messageId":"129","endLine":53,"endColumn":77},{"ruleId":"124","severity":1,"message":"128","line":69,"column":75,"nodeType":"126","messageId":"129","endLine":69,"endColumn":77},{"ruleId":"130","severity":1,"message":"131","line":1,"column":31,"nodeType":"119","messageId":"120","endLine":1,"endColumn":39},{"ruleId":"130","severity":1,"message":"132","line":34,"column":11,"nodeType":"119","messageId":"120","endLine":34,"endColumn":20},{"ruleId":"130","severity":1,"message":"133","line":42,"column":12,"nodeType":"119","messageId":"120","endLine":42,"endColumn":26},{"ruleId":"130","severity":1,"message":"134","line":44,"column":12,"nodeType":"119","messageId":"120","endLine":44,"endColumn":22},{"ruleId":"130","severity":1,"message":"135","line":46,"column":22,"nodeType":"119","messageId":"120","endLine":46,"endColumn":27},{"ruleId":"130","severity":1,"message":"136","line":50,"column":11,"nodeType":"119","messageId":"120","endLine":50,"endColumn":15},{"ruleId":"130","severity":1,"message":"137","line":74,"column":11,"nodeType":"119","messageId":"120","endLine":74,"endColumn":32},{"ruleId":"130","severity":1,"message":"138","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":30,"column":22,"nodeType":"119","messageId":"120","endLine":30,"endColumn":27},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'SecuredRoute' is defined but never used.","'UserSettings' is defined but never used.","'NotFound' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","'onSuccess' is assigned a value but never used.","'newIngredients' is assigned a value but never used.","'createDish' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'getOrCreateIngredient' is assigned a value but never used.","'DishItem' is defined but never used.","no-global-assign","no-unsafe-negation"]